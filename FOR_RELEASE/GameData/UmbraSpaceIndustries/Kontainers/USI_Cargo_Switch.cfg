
// Solids-only storage.
@PART[*]:HAS[@MODULE[USI_Container_Solids]]
{

    @MODULE[USI_Container_Solids]
    {
        // Configurable via EVA
        &EVAConfigurable = true

        // Part Mass
        &baseMass = #/mass$

        // Calculate Partial Volumes
        %tempval = #$baseVolume$
        @tempval *= 0.5
        &halfVolume = #$tempval$

        @tempval = #$baseVolume$
        @tempval *= 0.2
        &quarterVolume = #$tempval$

        // Calculate Costs
        @tempval = #$baseVolume$
        @tempval *= #$@RESOURCE_DEFINITION[MetallicOre]/unitCost$
        &MetallicOreCost = #$tempval$

        @tempval = #$baseVolume$
        @tempval *= #$@RESOURCE_DEFINITION[Uraninite]/unitCost$
        &UraniniteCost = #$tempval$

        @tempval = #$baseVolume$
        @tempval *= #$@RESOURCE_DEFINITION[Substrate]/unitCost$
        &SubstrateCost = #$tempval$

        @tempval = #$baseVolume$
        @tempval *= #$@RESOURCE_DEFINITION[Minerals]/unitCost$
        &MineralsCost = #$tempval$

        @tempval = #$baseVolume$
        @tempval *= #$@RESOURCE_DEFINITION[Karbonite]/unitCost$
        &KarboniteCost = #$tempval$

        @tempval = #$halfVolume$
        @tempval *= #$@RESOURCE_DEFINITION[ExoticMinerals]/unitCost$
        %tempval1 = #$halfVolume$
        @tempval1 *= #$@RESOURCE_DEFINITION[RareMetals]/unitCost$
        @tempval += #$tempval1$
        &CommoditiesCost = #$tempval$

        @tempval = #$baseVolume$
        @tempval *= #$@RESOURCE_DEFINITION[MaterialKits]/unitCost$
        &MaterialKitsCost = #$tempval$

        @tempval = #$baseVolume$
        @tempval *= #$@RESOURCE_DEFINITION[Metals]/unitCost$
        &MetalsCost = #$tempval$

        @tempval = #$baseVolume$
        @tempval *= #$@RESOURCE_DEFINITION[Polymers]/unitCost$
        &PolymersCost = #$tempval$

        @tempval = #$baseVolume$
        @tempval *= #$@RESOURCE_DEFINITION[Supplies]/unitCost$
        &SuppliesCost = #$tempval$

        @tempval = #$quarterVolume$
        @tempval *= #$@RESOURCE_DEFINITION[Ore]/unitCost$
        &OreCost = #$tempval$

        @tempval = #$baseVolume$
        @tempval *= #$@RESOURCE_DEFINITION[Machinery]/unitCost$
        &MachineryCost = #$tempval$

        @tempval = #$baseVolume$
        @tempval *= #$@RESOURCE_DEFINITION[Recyclables]/unitCost$
        &RecyclablesCost = #$tempval$

        @tempval = #$baseVolume$
        @tempval *= #$@RESOURCE_DEFINITION[SpecializedParts]/unitCost$
        &SpecializedPartsCost = #$tempval$

        @tempval = #$baseVolume$
        @tempval *= #$@RESOURCE_DEFINITION[Fertilizer]/unitCost$
        &FertilizerCost = #$tempval$

        @tempval = #$baseVolume$
        @tempval *= #$@RESOURCE_DEFINITION[Hydrates]/unitCost$
        &HydratesCost = #$tempval$

        @tempval = #$baseVolume$
        @tempval *= #$@RESOURCE_DEFINITION[Gypsum]/unitCost$
        &GypsumCost = #$tempval$

        @tempval = #$baseVolume$
        @tempval *= #$@RESOURCE_DEFINITION[Dirt]/unitCost$
        &DirtCost = #$tempval$

        // Apply default texture to any resources that don't have a specific one.
        &textureMetallicOre = #$textureDefault$
		&textureUraninite = #$textureDefault$
		&textureSubstrate = #$textureDefault$
		&textureMinerals = #$textureDefault$
		&textureKarbonite = #$textureDefault$
		&textureCommodities = #$textureDefault$
		&textureMaterialKits = #$textureDefault$
		&textureMetals = #$textureDefault$
		&texturePolymers = #$textureDefault$
		&textureSupplies = #$textureDefault$
		&textureOre = #$textureDefault$
		&textureMachinery = #$textureDefault$
		&textureRecyclables = #$textureDefault$
		&textureSpecializedParts = #$textureDefault$
		&textureFertilizer = #$textureDefault$
		&textureHydrates = #$textureDefault$
		&textureGypsum = #$textureDefault$
		&textureDirt = #$textureDefault$
    }

	MODULE
	{
		name = FStextureSwitch2
		textureNames = #$/MODULE[USI?Container?Solids]/textureMetallicOre$;$/MODULE[USI?Container?Solids]/textureUraninite$;$/MODULE[USI?Container?Solids]/textureSubstrate$;$/MODULE[USI?Container?Solids]/textureMinerals$;$/MODULE[USI?Container?Solids]/textureKarbonite$;$/MODULE[USI?Container?Solids]/textureCommodities$;$/MODULE[USI?Container?Solids]/textureMaterialKits$;$/MODULE[USI?Container?Solids]/textureMetals$;$/MODULE[USI?Container?Solids]/texturePolymers$;$/MODULE[USI?Container?Solids]/textureSupplies$;$/MODULE[USI?Container?Solids]/textureOre$;$/MODULE[USI?Container?Solids]/textureMachinery$;$/MODULE[USI?Container?Solids]/textureRecyclables$;$/MODULE[USI?Container?Solids]/textureSpecializedParts$;$/MODULE[USI?Container?Solids]/textureFertilizer$;$/MODULE[USI?Container?Solids]/textureHydrates$;$/MODULE[USI?Container?Solids]/textureGypsum$;$/MODULE[USI?Container?Solids]/textureDirt$
		objectNames = #$/MODULE[USI?Container?Solids]/objectNames$
		textureDisplayNames = MetallicOre;Uraninite;Substrate;Minerals;Karbonite;Commodities;MaterialKits;Metals;Polymers;Supplies;Ore;Machinery;Recyclables;SpecializedParts;Fertilizer;Hydrates;Gypsum;Dirt
		useFuelSwitchModule = true
		fuelTankSetups = 0;1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17
		repaintableEVA = #$/MODULE[USI?Container?Solids]/EVAConfigurable$
		moduleID = 1
		nextButtonText = Next Cargo
		prevButtonText = Previous Cargo
	}

	MODULE
	{
		name = FSfuelSwitch
		resourceNames = MetallicOre;Uraninite;Substrate;Minerals;Karbonite;ExoticMinerals,RareMetals;MaterialKits;Metals;Polymers;Supplies;Ore;Machinery;Recyclables;SpecializedParts;Fertilizer;Hydrates;Gypsum;Dirt
		resourceAmounts = #$/MODULE[USI?Container?Solids]/baseVolume$;$/MODULE[USI?Container?Solids]/baseVolume$;$/MODULE[USI?Container?Solids]/baseVolume$;$/MODULE[USI?Container?Solids]/baseVolume$;$/MODULE[USI?Container?Solids]/baseVolume$;$/MODULE[USI?Container?Solids]/halfVolume$,$/MODULE[USI?Container?Solids]/halfVolume$;$/MODULE[USI?Container?Solids]/baseVolume$;$/MODULE[USI?Container?Solids]/baseVolume$;$/MODULE[USI?Container?Solids]/baseVolume$;$/MODULE[USI?Container?Solids]/baseVolume$;$/MODULE[USI?Container?Solids]/quarterVolume$;$/MODULE[USI?Container?Solids]/baseVolume$;$/MODULE[USI?Container?Solids]/baseVolume$;$/MODULE[USI?Container?Solids]/baseVolume$;$/MODULE[USI?Container?Solids]/baseVolume$;$/MODULE[USI?Container?Solids]/baseVolume$;$/MODULE[USI?Container?Solids]/baseVolume$;$/MODULE[USI?Container?Solids]/baseVolume$
		initialResourceAmounts = 0;0;0;0;0;0,0;0;0;0;0;0;0;0;0;0;0;0;0
		tankCost = #$/MODULE[USI?Container?Solids]/MetallicOreCost$;$/MODULE[USI?Container?Solids]/UraniniteCost$;$/MODULE[USI?Container?Solids]/SubstrateCost$;$/MODULE[USI?Container?Solids]/MineralsCost$;$/MODULE[USI?Container?Solids]/KarboniteCost$;$/MODULE[USI?Container?Solids]/CommoditiesCost$;$/MODULE[USI?Container?Solids]/MaterialKitsCost$;$/MODULE[USI?Container?Solids]/MetalsCost$;$/MODULE[USI?Container?Solids]/PolymersCost$;$/MODULE[USI?Container?Solids]/SuppliesCost$;$/MODULE[USI?Container?Solids]/OreCost$;$/MODULE[USI?Container?Solids]/MachineryCost$;$/MODULE[USI?Container?Solids]/RecyclablesCost$;$/MODULE[USI?Container?Solids]/SpecializedPartsCost$;$/MODULE[USI?Container?Solids]/FertilizerCost$;$/MODULE[USI?Container?Solids]/HydratesCost$;$/MODULE[USI?Container?Solids]/GypsumCost$;$/MODULE[USI?Container?Solids]/DirtCost$
		basePartMass = #$/MODULE[USI?Container?Solids]/baseMass$
		tankMass = 0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0
		hasGUI = false
	}
}

// Liquids-only storage.
@PART[*]:HAS[@MODULE[USI?Container?Liquids]]
{

    @MODULE[USI_Container_Liquids]
    {
        // Configurable via EVA
        &EVAConfigurable = true

        // Part Mass
        &baseMass = #$/mass$

        // Calculate Partial Volumes
        %tempval = #$baseVolume$
        @tempval *= 0.5
        &halfVolume = #$tempval$

        @tempval = #$baseVolume$
        @tempval *= 0.25
        &quarterVolume = #$tempval$

        @tempval = #$baseVolume$
        @tempval /= 5
        &fifthVolume = #$tempval$

        @tempval = #$baseVolume$
        @tempval *= 5
        &fiveVolume = #$tempval$

        @tempval = #$fifthVolume$
        @tempval *= 0.45
        &LiqudFuelVolume = #$tempval$

        @tempval = #$fifthVolume$
        @tempval *= 0.55
        &OxidizerVolume = #$tempval$

        @tempval = #$baseVolume$
        @tempval *= 10
        &tenVolume = #$tempval$

        @tempval = #$baseVolume$
        @tempval *= 10
        &hundredVolume = #$tempval$

        // Calculate Costs
        @tempval = #$baseVolume$
        @tempval *= #$@RESOURCE_DEFINITION[Karborundum]/unitCost$
        &KarborundumCost = #$tempval$

        @tempval = #$tenVolume$
        @tempval *= #$@RESOURCE_DEFINITION[XenonGas]/unitCost$
        &XenonCost = #$tempval$

        @tempval = #$tenVolume$
        @tempval *= #$@RESOURCE_DEFINITION[ArgonGas]/unitCost$
        &ArgonCost = #$tempval$

        @tempval = #$LiqudFuelVolume$
        @tempval *= #$@RESOURCE_DEFINITION[LiquidFuel]/unitCost$
        %tempval1 = #$OxidizerVolume$
        @tempval1 *= #$@RESOURCE_DEFINITION[Oxidizer]/unitCost$
        @tempval += #$tempval1$
        &LFOCost = #$tempval$

        @tempval = #$baseVolume$
        @tempval *= #$@RESOURCE_DEFINITION[Water]/unitCost$
        &WaterCost = #$tempval$

        @tempval = #$baseVolume$
        @tempval *= #$@RESOURCE_DEFINITION[Chemicals]/unitCost$
        &ChemicalsCost = #$tempval$

        @tempval = #$baseVolume$
        @tempval *= #$@RESOURCE_DEFINITION[Mulch]/unitCost$
        &MulchCost = #$tempval$

        @tempval = #$fiveVolume$
        @tempval *= #$@RESOURCE_DEFINITION[LqdHydrogen]/unitCost$
        &LH2Cost = #$tempval$

        @tempval = #$fifthVolume$
        @tempval *= #$@RESOURCE_DEFINITION[LiquidFuel]/unitCost$
        &LiqudFuelCost = #$tempval$

        @tempval = #$fifthVolume$
        @tempval *= #$@RESOURCE_DEFINITION[MonoPropellant]/unitCost$
        &MonoPropellantCost = #$tempval$


        // Apply default texture to any resources that don't have a specific one.
        &textureKarborundum = #$textureDefault$
        &textureXenon = #$textureDefault$
        &textureArgon = #$textureDefault$
        &textureLFO = #$textureDefault$
        &textureWater = #$textureDefault$
        &textureChemicals = #$textureDefault$
        &textureMulch = #$textureDefault$
        &textureLH2 = #$textureDefault$
        &textureLiqudFuel = #$textureDefault$
        &textureMonoPropellant = #$textureDefault$
    }

	MODULE
	{
		name = FStextureSwitch2
		textureNames = #$/MODULE[USI?Container?Liquids]/textureKarborundum$;$/MODULE[USI?Container?Liquids]/textureXenon$;$/MODULE[USI?Container?Liquids]/textureArgon$;$/MODULE[USI?Container?Liquids]/textureLFO$;$/MODULE[USI?Container?Liquids]/textureWater$;$/MODULE[USI?Container?Liquids]/textureChemicals$;$/MODULE[USI?Container?Liquids]/textureMulch$;$/MODULE[USI?Container?Liquids]/textureLH2$;$/MODULE[USI?Container?Liquids]/textureLiqudFuel$;$/MODULE[USI?Container?Liquids]/textureMonoPropellant$
		objectNames = #$/MODULE[USI?Container?Liquids]/objectNames$
		textureDisplayNames = Karborundum;Xenon;Argon;LFO;Water;Chemicals;Mulch;LH2;LiqudFuel;MonoPropellant
		useFuelSwitchModule = true
		fuelTankSetups = 0;1;2;3;4;5;6;7;8;9
		repaintableEVA = #$/MODULE[USI?Container?Liquids]/EVAConfigurable$
		nextButtonText = Next Cargo
		prevButtonText = Previous Cargo
		moduleID = 1
	}

	MODULE
	{
		name = FSfuelSwitch
		resourceNames = Karborundum;XenonGas;ArgonGas;LiquidFuel,Oxidizer;Water;Chemicals;Mulch;LqdHydrogen;LiquidFuel;MonoPropellant
		resourceAmounts = #$/MODULE[USI?Container?Liquids]/baseVolume$;$/MODULE[USI?Container?Liquids]/tenVolume$;$/MODULE[USI?Container?Liquids]/tenVolume$;14400,17600;$/MODULE[USI?Container?Liquids]/baseVolume$;$/MODULE[USI?Container?Liquids]/baseVolume$;$/MODULE[USI?Container?Liquids]/baseVolume$;$/MODULE[USI?Container?Liquids]/fiveVolume$;$/MODULE[USI?Container?Liquids]/fifthVolume$;$/MODULE[USI?Container?Liquids]/fifthVolume$
		initialResourceAmounts = 0;0;0;0;0;0;0;0;0;0
		tankCost = #$/MODULE[USI?Container?Liquids]/KarborundumCost$;$/MODULE[USI?Container?Liquids]/XenonCost$;$/MODULE[USI?Container?Liquids]/ArgonCost$;$/MODULE[USI?Container?Liquids]/LFOCost$;$/MODULE[USI?Container?Liquids]/WaterCost$;$/MODULE[USI?Container?Liquids]/ChemicalsCost$;$/MODULE[USI?Container?Liquids]/MulchCost$;$/MODULE[USI?Container?Liquids]/LH2Cost$;$/MODULE[USI?Container?Liquids]/LiqudFuelCost$;$/MODULE[USI?Container?Liquids]/MonoPropellantCost$
		basePartMass = #$/MODULE[USI?Container?Liquids]/baseMass$
		tankMass = 0;0;0;0;0;0;0;0;0;0
		hasGUI = false
	}

}